diff -rupN gmu-0.9.1.orig/src/audio.h gmu-0.9.1/src/audio.h
--- gmu-0.9.1.orig/src/audio.h	2012-02-02 16:31:17.000000000 -0500
+++ gmu-0.9.1/src/audio.h	2016-06-14 06:43:45.324861534 -0400
@@ -18,6 +18,8 @@
 #ifndef _AUDIO_H
 #define _AUDIO_H
 
+#include <sys/types.h>
+
 int  audio_device_open(int samplerate, int channels);
 int  audio_fill_buffer(char *data, int size);
 int  audio_get_playtime(void);
diff -rupN gmu-0.9.1.orig/src/frontends/gmusrv.c gmu-0.9.1/src/frontends/gmusrv.c
--- gmu-0.9.1.orig/src/frontends/gmusrv.c	2011-09-18 10:29:46.000000000 -0400
+++ gmu-0.9.1/src/frontends/gmusrv.c	2016-06-14 06:47:35.871274887 -0400
@@ -161,7 +161,17 @@ static void *thread_func(void *arg)
 static int init(void)
 {
 	int res = 0;
-	if (pthread_create(&fe_thread, NULL, thread_func, NULL) == 0)
+	pthread_attr_t attr;
+        size_t  stacksize = 0;
+ 
+        pthread_attr_init( &attr );
+        pthread_attr_getstacksize( &attr, &stacksize );
+        wdprintf(V_DEBUG, "gmusrv", "before stacksize : [%d]\n", stacksize);
+        pthread_attr_setstacksize( &attr, 512*1024 );
+        pthread_attr_getstacksize( &attr, &stacksize );
+        wdprintf(V_DEBUG, "gmusrv", "after  stacksize : [%d]\n", stacksize);
+
+	if (pthread_create(&fe_thread, &attr, thread_func, NULL) == 0)
 		res = 1;
 	return res;
 }
diff -rupN gmu-0.9.1.orig/src/frontends/sdl/sdl.c gmu-0.9.1/src/frontends/sdl/sdl.c
--- gmu-0.9.1.orig/src/frontends/sdl/sdl.c	2013-02-20 03:36:02.000000000 -0500
+++ gmu-0.9.1/src/frontends/sdl/sdl.c	2016-06-14 06:48:57.894711452 -0400
@@ -1364,9 +1364,20 @@ static int init(void)
 	if (!ds) {
 		wdprintf(V_ERROR, "sdl_frontend", "ERROR: Display surface uninitialized.\n");
 	} else {
+		pthread_attr_t attr;
+		size_t  stacksize = 0;
+
 		wdprintf(V_INFO, "sdl_frontend", "Display surface initialized.\n");
 		display = ds;
-		if (pthread_create(&fe_thread, NULL, start_player, NULL) == 0)
+ 
+		pthread_attr_init( &attr );
+		pthread_attr_getstacksize( &attr, &stacksize );
+		wdprintf(V_DEBUG, "sdl_frontend", "before stacksize : [%d]\n", stacksize);
+		pthread_attr_setstacksize( &attr, 512*1024 );
+		pthread_attr_getstacksize( &attr, &stacksize );
+		wdprintf(V_DEBUG, "sdl_frontend", "after  stacksize : [%d]\n", stacksize);
+
+		if (pthread_create(&fe_thread, &attr, start_player, NULL) == 0)
 			res = 1;
 	}
 	return res;