#! /bin/sh
# Zipit Z2 SquashFS with overlay preinit script

# pivot root function
do_pivot() { # <new_root> <old_root>
	cd $1
	/bin/mount -o noatime,move /proc $1/proc && \
	/sbin/pivot_root $1 $1$2 && {
		/bin/mount -o noatime,move $2/dev /dev
		/bin/mount -o noatime,move $2/tmp /tmp
		/bin/mount -o noatime,move $2/sys /sys
		/bin/mount -o noatime,move $2/overlay /overlay
	}
	cd /
}

# Setup proc, sys & tmp
/bin/mount -t proc proc /proc
/bin/mount -t sysfs none /sys
/bin/mount -t tmpfs none /tmp

# Setup dev
/bin/mount -t tmpfs -o size=64k,mode=0755 none /dev
/bin/mkdir -p /dev/pts
/bin/mount -t devpts devpts /dev/pts
/bin/mkdir -p /dev/shm
/bin/echo /sbin/mdev > /proc/sys/kernel/hotplug
/sbin/mdev -s

# If booting from anything other than internal flash,
# skip overlay mount and continue to regular init
rootdev=`/bin/cat /proc/cmdline | /bin/sed -e 's/^.*root=//' -e 's/ .*$//'`
if [ "$rootdev" != "/dev/mtdblock3" ]; then
	# check rootfs for errors
	mount -o remount,ro /
	/usr/sbin/e2fsck -y "$rootdev" &>/dev/tty0
	if [ $? -eq 1 ] || [ $? -eq 2 ]; then
		echo "e2fsck corrected errors on $rootdev, restarting..." >/dev/tty0
		sleep 3
	exec /sbin/reboot -f
    fi
	mount -o remount,rw /
	# Do not mount squash/jffs in case partition sizes are different.
	# Potential data loss when mounting the writable jffs
	exec /sbin/init
fi

# Make sure root is read only
/bin/mount -o remount,ro /

# Make temporary rootfs
/bin/mount -t tmpfs none /rom
/bin/mkdir -p /overlay
/bin/mkdir -p /mnt

# Mount the jffs partition
/bin/mount -t jffs2 -o rw,noatime /dev/mtdblock4 /overlay
if [ $? -ne 0 ]; then
	# jffs partition was not mountable, mount tmpfs as
	# overlay and show warning
	/bin/mount -t tmpfs none /overlay
	echo "Unable to mount jffs partition, mounting tmpfs overlay instead" >/dev/tty0
fi

# Make our required overlay directories in jffs
/bin/mkdir -p /overlay/upper
/bin/mkdir -p /overlay/work

#FOR TESTING: exit preinit and run testinit
if [ -f /overlay/upper/etc/testinit ]; then
	exec /overlay/upper/etc/testinit
fi

confovpass=0
mntdestdir=/overlay/mnt

#TODO: implement overlay from loop device (ie, image file from fat sd card)
if [ -f "/overlay/upper/etc/overlay.conf" ]; then
	# Source overlay.conf from jffs partition (not squashfs)
	. /overlay/upper/etc/overlay.conf

	# if overlay device is mounted, unmount it so we can check for errors
	if /bin/grep -qs "^/dev/$overlaydev " /proc/mounts ; then
		umount "/dev/$overlaydev";
	fi

	# check fs for errors
	/usr/sbin/e2fsck -y "/dev/$overlaydev" &>/dev/tty0

	# Mount the filesystem from our overlay config
	mkdir -p "$mntdestdir/$overlaydev"

	if ! /bin/mount -t "$fstype" -o rw,noatime "/dev/$overlaydev" "$mntdestdir/$overlaydev" ; then
		# Failed to mount configured overlay, clean up mountpoint
		rmdir "$mntdestdir/$overlaydev"
		echo "Failed to mount configured overlay!" >/dev/tty0
		# Mount the jffs overlay only
		/bin/mount -t overlay /overlay -o lowerdir=/,upperdir=/overlay/upper,workdir=/overlay/work /mnt
	else	
		# Make our required overlay directories
		/bin/mkdir -p "$mntdestdir/$overlaydev/$upperdir"
		/bin/mkdir -p "$mntdestdir/$overlaydev/$workdir"
		# Mount the jffs and configured overlays; writes go to the configured overlay
		/bin/mount -t overlay overlay -o lowerdir=/overlay/upper:/,upperdir="$mntdestdir/$overlaydev/$upperdir",workdir="$mntdestdir/$overlaydev/$workdir" /mnt
		confovpass=1
		echo "Mounted jffs and $overlaydev overlay" >/dev/tty0
	fi
else
	# Mount the jffs overlay if no configured overlay
	/bin/mount -t overlay /overlay -o lowerdir=/,upperdir=/overlay/upper,workdir=/overlay/work /mnt
fi

# pivot root
do_pivot /mnt /rom

# If configured overlay mount passed, move overlaydev mount to /mnt
if [ $confovpass -eq 1 ]; then
	mkdir -p "/mnt/$overlaydev"
	/bin/mount -o noatime,move "$mntdestdir/$overlaydev" "/mnt/$overlaydev"
fi

# Continue to regular init
exec /sbin/init